{"version":3,"sources":["components/Footer.js","components/Index.js","components/Contact.js","App.js","serviceWorker.js","index.js"],"names":["Footer","react_default","a","createElement","className","id","Index","dist_default","action","fields","name","placeholder","type","required","href","target","Contact","method","htmlFor","value","App","state","toggle","changeView","_this","setState","prevState","onClick","this","components_Index","components_Contact","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.c14f57bb.chunk.js","sourcesContent":["import React from 'react'\n\nconst Footer = () => {\n    return (\n      <div className=\"clearfix\" id=\"footer\">\n        <p> - +230-58531705 - Copyright 2018 - House MAsters - All rights reserved - </p>\n      </div>\n    )\n}\n\nexport default Footer","import React from 'react'\nimport Mailchimp from 'react-mailchimp-form'\n\nconst Index = () => {\n  return (\n    <div id=\"front_panel\" className=\"front_panel\">\n\n      <h2>Over a 100 Houses will soon be listed</h2>\n      <p>Work in progress so far...</p>\n      <p></p>\n\n      <div id=\"progress-box\">\n        <div id=\"progress-bg\">\n          <div className=\"progressbar\" id=\"progress\">66</div>\n        </div>\n      </div>\n      <p>Leave Your Contact to be notified of houses as soon as they are available...</p>\n      <p></p>\n\n      <div id=\"Newsletter\">\n        {/*<MailchimpSubscribe url={url} render={({subscribe, status, message})=>(\n          <form id=\"notify\" onSubmitted={formData => subscribe(formData)}>\n            <input type=\"email\" id=\"input\" name=\"email\" placeholder=\"Type your email address\"\n                   className=\"required\" />\n            <input type=\"submit\" id=\"submit\" value=\"SEND\" className=\"required email\" />\n            {status === \"sending\" && <div style={{ color: \"blue\" }}>sending...</div>}\n            {status === \"error\" && <div style={{ color: \"red\" }} dangerouslySetInnerHTML={{__html: message}}/>}\n            {status === \"success\" && <div style={{ color: \"green\" }}>Subscribed !</div>}\n          </form>\n        )}\n        />*/}\n        <Mailchimp\n          action='https://housemasters.us19.list-manage.com/subscribe/post?u=1c51dd1902c540b81f1127a51&amp;id=b3a897aaaf'\n          fields={[\n            {\n              name: 'EMAIL',\n              placeholder: 'Email',\n              type: 'email',\n              required: true\n            }\n          ]}\n          className= {\"required email\"}\n        />\n      </div>\n\n      <div id=\"social\">\n        <ul>\n          <li className=\"email show_contact\">\n            <a href=\"#\">Email</a>\n          </li>\n          <li className=\"twitter\">\n            <a href=\"http://www.twitter.com/#!\" target=\"_blank\">Twitter</a>\n          </li>\n          <li className=\"facebook\">\n            <a href=\"http://www.facebook.com/housemasters.mu\" target=\"_blank\">Facebook</a>\n          </li>\n\n          <li className=\"linkedin\">\n            <a href=\"http://www.linkedin.com/#!\" target=\"_blank\">linkedin</a>\n          </li>\n\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default Index","import React from 'react'\n\nconst Contact = () => {\n    return (\n        <div id=\"ContactForm\">\n          <div className=\"loader\"></div>\n          <div className=\"bar\"></div>\n          <form action=\"https://formspree.io/olalekanarowoselu@gmail.com\" className=\"ContactForm\" name=\"contact_form\" method=\"POST\">\n            <h3>Send Us a Message</h3>\n            <div className=\"input_boxes\">\n              <p>\n                <label htmlFor=\"name\">Your Name</label>\n                <span className=\"name-missing\">* Enter your Full Name</span>\n                <br />\n                <input id=\"name\" type=\"text\" name=\"name\" />\n              </p>\n              <p>\n                <label htmlFor=\"e-mail\">Your E-mail</label>\n                <span className=\"email-missing\">* Enter a valid email</span>\n                <br />\n                <input id=\"e-mail\" type=\"text\" name=\"email\" />\n              </p>\n              <p>\n                <label htmlFor=\"message\">Type your Message</label>\n                <span className=\"message-missing\">* Type your Message!</span>\n                <br />\n                <textarea id=\"message\" name=\"message\"></textarea>\n              </p>\n              <div id=\"exit\">\n                <a href=\"#\" className=\"show_contact\">exit</a>\n              </div>\n              <input className=\"submit\" type=\"submit\" name=\"submit\" value=\"SEND\" />\n            </div>\n          </form>\n          <div id=\"contxt\" className=\"contxt\">\n            <h3>Address</h3>\n            <p>Avenue des cocotier</p>\n            <p>2nd Floor </p>\n            <p>MOrcement Bismic</p>\n            <h3>Phone</h3>\n            <p>58531705</p>\n            <h3>Email</h3>\n            <p>rentals@housemasters.mu</p>\n          </div>\n        </div>\n    )\n}\n\nexport default Contact","import React, { Component } from 'react';\nimport Footer from './components/Footer';\nimport Index from './components/Index';\nimport Contact from './components/Contact';\nimport './App.css';\n\nclass App extends Component {\n  state= {\n    toggle: true\n  }\n\n  changeView = () => {\n    this.setState( prevState =>({\n      toggle: !prevState.toggle\n    }))\n  }\n\n  render() {\n    return (\n      <div id=\"container\">\n\n        <div id=\"mainContent\">\n          <div id=\"logo\">HouseMasters.mu</div>\n          <div id=\"content\">\n            <div id=\"show_contact\" className=\"show_contact\" onClick={this.changeView}>contact</div>\n            {\n              this.state.toggle ? <Index /> : <Contact/>\n            }\n          </div>\n          <Footer/>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}